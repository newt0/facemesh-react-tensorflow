[{"/Users/newt0/dev/new/facemesh-react-tensorflow/src/reportWebVitals.js":"1","/Users/newt0/dev/new/facemesh-react-tensorflow/src/App.js":"2","/Users/newt0/dev/new/facemesh-react-tensorflow/src/index.js":"3","/Users/newt0/dev/new/facemesh-react-tensorflow/src/utilities.js":"4"},{"size":364,"mtime":1609147005439,"results":"5","hashOfConfig":"6"},{"size":1885,"mtime":1609152074818,"results":"7","hashOfConfig":"6"},{"size":500,"mtime":1609147000511,"results":"8","hashOfConfig":"6"},{"size":19168,"mtime":1609151426021,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"123fime",{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/newt0/dev/new/facemesh-react-tensorflow/src/reportWebVitals.js",[],"/Users/newt0/dev/new/facemesh-react-tensorflow/src/App.js",["19","20"],"import { React, useRef, useEffect } from \"react\";\nimport \"./App.css\";\nimport Webcam from \"react-webcam\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as facemesh from \"@tensorflow-models/facemesh\";\nimport { drawMesh } from \"./utilities\";\n\nfunction App() {\n  // setup references\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // load facemesh\n  const runFacemesh = async () => {\n    const net = await facemesh.load({\n      inputResolution: { width: 640, height: 480 },\n      scale: 0.8,\n    });\n\n    setInterval(() => {\n      detect(net);\n    }, [10]); // run detect function every 100 milliseconds\n  };\n\n  // detect function\n  const detect = async (net) => {\n    if (\n      // checking the webcam is up and running, and we're receiving data\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // get video properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth; // !typo!\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // set canvas width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // make detections\n      const face = await net.estimateFaces(video);\n      // console.log(face);\n\n      // get canvas context for drawing\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawMesh(face, ctx);\n    }\n  };\n\n  useEffect(() => {\n    runFacemesh();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_header\">\n        <Webcam className=\"webcam\" ref={webcamRef} />\n        <canvas className=\"canvas\" ref={canvasRef} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/newt0/dev/new/facemesh-react-tensorflow/src/index.js",[],"/Users/newt0/dev/new/facemesh-react-tensorflow/src/utilities.js",[],{"ruleId":"21","severity":1,"message":"22","line":4,"column":13,"nodeType":"23","messageId":"24","endLine":4,"endColumn":15},{"ruleId":"25","severity":1,"message":"26","line":58,"column":6,"nodeType":"27","endLine":58,"endColumn":8,"suggestions":"28"},"no-unused-vars","'tf' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'runFacemesh'. Either include it or remove the dependency array.","ArrayExpression",["29"],{"desc":"30","fix":"31"},"Update the dependencies array to be: [runFacemesh]",{"range":"32","text":"33"},[1646,1648],"[runFacemesh]"]